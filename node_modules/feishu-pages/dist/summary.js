"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSummary = exports.prepareDocSlugs = void 0;
const path_1 = __importDefault(require("path"));
const utils_1 = require("./utils");
/**
 * Iter docs tree to give them as slug, position and filename
 * @param docs
 * @param parentSlug
 */
const prepareDocSlugs = (docs, slugMap, parentSlug = '') => {
    var _a;
    for (let i = 0; i < docs.length; i++) {
        const doc = docs[i];
        const fileKey = (0, utils_1.normalizeSlug)(((_a = doc.meta) === null || _a === void 0 ? void 0 : _a.slug) || doc.node_token);
        const fileSlug = path_1.default.join(parentSlug, fileKey);
        doc.slug = fileSlug;
        doc.position = i;
        doc.filename = `${fileSlug}.md`;
        slugMap[doc.node_token] = doc.slug;
        if (doc.children.length > 0) {
            (0, exports.prepareDocSlugs)(doc.children, slugMap, fileSlug);
        }
    }
};
exports.prepareDocSlugs = prepareDocSlugs;
/**
 * Generate SUMMARY.md
 */
const generateSummary = (docs) => {
    let output = '';
    for (const doc of docs) {
        let indent = '  '.repeat(doc.depth);
        output += `${indent}- [${doc.title}](${doc.filename})\n`;
        if (doc.children.length > 0) {
            output += (0, exports.generateSummary)(doc.children);
        }
    }
    return output;
};
exports.generateSummary = generateSummary;
